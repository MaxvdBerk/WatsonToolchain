version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](toolchain.svg?localize)'
  icon: icon.svg
  required:
    - front-build
    - front-repo
    - Mongo-Server-build
    - Mongo-Server-repo
    - Mongo-API-build
    - Mongo-API-repo
  info:
    git url: >-
      [https://github.com/MaxvdBerk/WatsonToolchain](https://github.com/MaxvdBerk/WatsonToolchain)
    git branch: >-
      [master](https://github.com/MaxvdBerk/WatsonToolchain/tree/master)
toolchain:
  name: 'watson' #add '-{{timestamp}}' for multiple horizontal deployment
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  front-repo:
    service_id: githubpublic
    parameters:
      repo_name: 'front-{{toolchain.name}}'
      repo_url: 'https://github.com/BDelleman/Front'
      type: clone
      has_issues: true
      enable_traceability: true
  front-build:
    service_id: pipeline
    parameters:
      services:
        - front-repo
      name: '{{services.front-repo.parameters.repo_name}}'
      ui-pipeline: true
      configuration:
        content:
          $text: front.pipeline.yml
        env:
          FRONT_REPO: front-repo
          CF_APP_NAME: 'front-{{toolchain.name}}'
          # CF_APP_NAME: '{{form.pipeline.parameters.prod-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
        execute: true
  Mongo-Server-repo:
    service_id: githubpublic
    parameters:
      repo_name: 'Mongo-Server-{{toolchain.name}}'
      repo_url: 'https://github.com/BDelleman/ServerMongo'
      type: clone
      has_issues: true
      enable_traceability: true
  Mongo-Server-build:
    service_id: pipeline
    parameters:
      services:
        - Mongo-Server-repo
      name: '{{services.Mongo-Server-repo.parameters.repo_name}}'
      ui-pipeline: true
      configuration:
        content:
          $text: Mongo-Server.pipeline.yml
        env:
          MONGO_SERVER_REPO: Mongo-Server-repo
          CF_APP_NAME: 'Mongo-Server-{{toolchain.name}}'
          # CF_APP_NAME: '{{form.pipeline.parameters.prod-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
        execute: true
  Mongo-API-repo:
    service_id: githubpublic
    parameters:
      repo_name: 'Mongo-API-{{toolchain.name}}'
      repo_url: 'https://github.com/BDelleman/MongoAPI'
      type: clone
      has_issues: true
      enable_traceability: true
  Mongo-API-build:
    service_id: pipeline
    parameters:
      services:
        - Mongo-API-repo
      name: '{{services.Mongo-API-repo.parameters.repo_name}}'
      ui-pipeline: true
      configuration:
        content:
          $text: Mongo-API.pipeline.yml
        env:
          MONGO_API_REPO: Mongo-API-repo
          CF_APP_NAME: 'Mongo-API-{{toolchain.name}}'
          # CF_APP_NAME: '{{form.pipeline.parameters.prod-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
        execute: true        
form:
  pipeline:
    parameters:
      prod-app-name: '{{toolchain.name}}'
    schema:
      $ref: deploy.json

